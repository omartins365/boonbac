/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/color_mode.js":
/*!************************************!*\
  !*** ./resources/js/color_mode.js ***!
  \************************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*!\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\n * Copyright 2011-2023 The Bootstrap Authors\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\n */\n// console.log('Color mode js' );\n(function () {\n  'use strict';\n\n  var getStoredTheme = function getStoredTheme() {\n    var cookieValue = document.cookie.match(/theme=([^;]+)/);\n\n    if (cookieValue) {\n      return cookieValue[1];\n    }\n\n    return null;\n  };\n\n  var setStoredTheme = function setStoredTheme(theme) {\n    document.cookie = \"theme=\".concat(theme, \"; expires=Thu, 18 Dec 2029 12:00:00 UTC; path=/\");\n  };\n\n  var getPreferredTheme = function getPreferredTheme() {\n    var storedTheme = getStoredTheme();\n\n    if (storedTheme) {\n      return storedTheme;\n    }\n\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  };\n\n  var setTheme = function setTheme(theme) {\n    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      document.documentElement.setAttribute('data-bs-theme', 'dark');\n    } else {\n      document.documentElement.setAttribute('data-bs-theme', theme);\n    }\n  };\n\n  setTheme(getPreferredTheme());\n\n  var showActiveTheme = function showActiveTheme(theme) {\n    var _activeThemeIcon$clas;\n\n    var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var themeSwitcher = document.querySelector('#bd-theme');\n\n    if (!themeSwitcher) {\n      // console.log('no theme Switcher');\n      return;\n    }\n\n    var themeSwitcherText = document.querySelector('#bd-theme-text');\n    var activeThemeIcon = document.querySelector('.theme-icon-active');\n    var btnToActive = document.querySelector(\"[data-bs-theme-value=\\\"\".concat(theme, \"\\\"]\"));\n    var bsIconOfActiveBtn = btnToActive.querySelector('i').classList[1];\n    document.querySelectorAll('[data-bs-theme-value]').forEach(function (element) {\n      element.classList.remove('active');\n      element.setAttribute('aria-pressed', 'false');\n    });\n    btnToActive.classList.add('active');\n    btnToActive.setAttribute('aria-pressed', 'true');\n    activeThemeIcon.classList.remove('bi', 'fa');\n\n    (_activeThemeIcon$clas = activeThemeIcon.classList).remove.apply(_activeThemeIcon$clas, _toConsumableArray(Array.from(activeThemeIcon.classList).filter(function (className) {\n      return className.startsWith('bi-');\n    })));\n\n    activeThemeIcon.classList.add('bi', bsIconOfActiveBtn);\n    var themeSwitcherLabel = \"\".concat(themeSwitcherText.textContent, \" (\").concat(btnToActive.dataset.bsThemeValue, \")\");\n    themeSwitcher.setAttribute('aria-label', themeSwitcherLabel);\n\n    if (focus) {\n      themeSwitcher.focus();\n    }\n  };\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function () {\n    var storedTheme = getStoredTheme();\n\n    if (storedTheme !== 'light' && storedTheme !== 'dark') {\n      setTheme(getPreferredTheme());\n    }\n  });\n  window.addEventListener('DOMContentLoaded', function () {\n    showActiveTheme(getPreferredTheme());\n    document.querySelectorAll('[data-bs-theme-value]').forEach(function (toggle) {\n      toggle.addEventListener('click', function () {\n        var theme = toggle.getAttribute('data-bs-theme-value');\n        setStoredTheme(theme);\n        setTheme(theme);\n        showActiveTheme(theme, true);\n      });\n    }); // console.log('Showed theme ',getPreferredTheme() );\n  });\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/color_mode.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/color_mode.js"]();
/******/ 	
/******/ })()
;